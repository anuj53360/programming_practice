package leetcode;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class LevelOrderTraversalBinartTree {

	class TreeNode{
		int val;
		TreeNode left;
		TreeNode right;
	   public TreeNode(int val) {
		left=null;
		right=null; 
	}
	
	}
	
     public List<List<Integer>> levelOrder(TreeNode root) {
          Queue<Integer> queue=new LinkedList<Integer>();          
    	 List<Integer> list=new ArrayList<>();
    	 List<List<Integer>> list1=new ArrayList<>();
    	 if(root!=null) {
    		 queue.add(root.val);
    	 }
    	 
    	 while(!queue.isEmpty()) {
    		 int data=queue.peek();
    		 list.add(data);
    		 queue.poll();
    		 if(root.left!=null) {
    			 queue.add(root.left.val);
    		 }
    		 if(root.right!=null) {
    			 queue.add(root.right.val);
    		 }
    		 list1.add(list);
    	 }
    	 return list1;
    }
	   
	
	public static void main(String[] args) {
		
	}
}
