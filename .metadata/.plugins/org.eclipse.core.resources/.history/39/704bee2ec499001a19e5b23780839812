package com.pdf.pdfreader.serviceIm;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import com.pdf.pdfreader.controller.PdfReaderController;
import com.pdf.pdfreader.service.PdfReaderService;

@Service
public class PdfReaderServiceImpl implements PdfReaderService {

	Logger logger = LoggerFactory.getLogger(PdfReaderController.class);
	List<String> list = new ArrayList<>();

	@Override
	public void readpdffile() {
		try {
			readpdffileutil();
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		logger.info("readpdffile method called from" + PdfReaderServiceImpl.class);

	}

	public void readpdffileutil() throws IOException {
		String fileName = "C:/Users/anuj5/Downloads/pdfreader/pdfreader/LearnJava.pdf";
		Map<Integer, Integer> map = new HashMap<>();
		PDDocument document = PDDocument.load(new File(fileName)); 
		 int pages = document.getNumberOfPages();
		
		GetWordFromPdf gw = new GetWordFromPdf();
		ExecutorService executor=Executors.newFixedThreadPool(16);
		List a=new ArrayList<>();
		//List<String> l =null;
		for (int i = 0; i < pages; i++) {
			//List<String> l =null;
			executor.execute(() -> {
					try {
						List<String> l = gw.getwords(i, fileName);
					} catch (IOException e) {
						
						e.printStackTrace();
					}
				a.add(l);
			});
			map.put(i, l.size());
		}
		
		
//		executor.execute(()->{
//			for (int i = 1; i <= pages; i++) {
//				List<String> l = null;
//				try {
//					l = gw.getwords(i, fileName);
//				} catch (IOException e) {
//					e.printStackTrace();
//				}
//				map.put(i, l.size());
//			}
//			
//		});
			executor.shutdown(); 
			
//		for (int i = 1; i <= pages; i++) {
//			List<String> l = null;
//			try {
//				l = gw.getwords(i, fileName);
//			} catch (IOException e) {
//				e.printStackTrace();
//			}
//			map.put(i, l.size());
//		}
      		
		
		for (Entry<Integer, Integer> entry : map.entrySet()) {
			System.out.println(entry.getKey()+" "+entry.getValue());
		}

	}

}
