package com.pdf.pdfreader.serviceIm;

import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.function.Function;
import java.util.stream.Collectors;
import org.apache.pdfbox.multipdf.Splitter;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import com.pdf.pdfreader.controller.PdfReaderController;
import com.pdf.pdfreader.service.PdfReaderService;

@Service
public class PdfReaderServiceImpl implements PdfReaderService {

	Logger logger = LoggerFactory.getLogger(PdfReaderController.class);
	private static final String FILE_NAME = "C:/Users/anuj5/Downloads/pdfreader/pdfreader/form16.pdf";

	@Override
	public Map<Integer, List<String>> readPdfFile() throws IOException {
		logger.info("readPdfFile method called from" + PdfReaderServiceImpl.class);
		return readPdfFileUtil();
	}

	public Map<Integer, List<String>> readPdfFileUtil() throws IOException {
		logger.info("readPdfFileUtil method called from" + PdfReaderServiceImpl.class);
		Map<Integer, List<String>> pageNumberAndWordPage = new HashMap<>();
		PDDocument document = PDDocument.load(new java.io.File(FILE_NAME));
		Splitter splitter = new Splitter();
		int pageNum = 0;
		List<PDDocument> listOfPdfPages = splitter.split(document);
		for (PDDocument pdDocument : listOfPdfPages) {
			List<String> listOfWordPage = Arrays.asList(new PDFTextStripper().getText(pdDocument).split(" ")).parallelStream()
					.filter(Objects::nonNull).map(word -> word.replaceAll("[^a-zA-Z0-9]", ""))
					.filter(word -> word.length() > 5).collect(Collectors.toList());
			pageNum++;
			System.out.println(listOfWordPage);
			if (!listOfWordPage.isEmpty())
				pageNumberAndWordPage.put(pageNum, listOfWordPage);
		}
		logger.info("readPdfFileUtil method called end" + PdfReaderServiceImpl.class);
		return pageNumberAndWordPage;
	}

}
