package leetcode;

import java.util.Stack;

import leetcode.MergeTwoLinkedList.ListNode;

public class PalindromeLinkedList {

	class ListNode{
		int val;
		ListNode next;
		public ListNode(int val) {
			this.val=val;
			next=null;
		}
	}
	ListNode head;
	
	public void insert(int data) {
		ListNode new_node=new ListNode(data);
	    new_node.next=head;
       head=new_node;	
	}
	
	public void printList() {
		ListNode temp=head;
		while(temp!=null) {
			System.out.print(temp.val);
			temp=temp.next;
		}
	}
	
	
   public boolean isPalindrome(ListNode head) {
        Stack<Integer> stack=new Stack<Integer>();
        ListNode temp=head;
        while(temp!=null) {
        	stack.push(temp.val);
        	temp=temp.next;
        }
	   
	   
	   
	   return false;
    }
	
	public static void main(String[] args) {
		PalindromeLinkedList pll=new PalindromeLinkedList();
		pll.insert(1);
		pll.insert(2);
		pll.insert(2);
		pll.insert(1);
		pll.isPalindrome(pll.head);
	}
}
